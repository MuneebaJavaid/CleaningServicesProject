// <auto-generated />
using SaafCleaningProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SaafCleaningProject.Migrations
{
    [DbContext(typeof(ClientDbContext))]
    [Migration("20220715021608_initial create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SaafCleaningProject.Models.DataModel", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CId"), 1L, 1);

                    b.Property<string>("CAddress")
                        .IsRequired()
                        .HasColumnType("Varchar(150)");

                    b.Property<string>("CEmail")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("CPhone")
                        .IsRequired()
                        .HasColumnType("Varchar(15)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.HasKey("CId");

                    b.ToTable("CDataModels");
                });
#pragma warning restore 612, 618
        }
    }
}
